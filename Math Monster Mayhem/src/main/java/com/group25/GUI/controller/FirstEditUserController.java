package com.group25.GUI.controller;

import java.awt.Taskbar;
import java.awt.Taskbar.Feature;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.group25.BubsFancyButtonBorder;
import com.group25.Outfit;
import com.group25.User;

import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.ButtonType;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.stage.Stage;
import javafx.util.Duration;

/**
 * Controller class for the first user profile creation/editing scene.
 * @author Adam Murdock Gale, Sameer Mehboob Bugti, Saad Meshaal Koker, Jesse Titus, Fahmid Abdullah 
 */
public class FirstEditUserController {

    @FXML
    private BubsFancyButtonBorder btnBack;

    @FXML
    private Label labelFeedback1;

    @FXML
    private TextField usernameText;

    /**
     * Event handler for the 'Create' button click.
     * @param event The ActionEvent generated by the button click.
     */
    @FXML
    private void createBtnClicked(ActionEvent event) {
        // Retrieve the username entered in the TextField
        String newUsername = usernameText.getText().trim();
        ObjectMapper mapper = new ObjectMapper();

        // Check if the username is not empty
        if (!newUsername.isEmpty()) {
            try {
                // Check if user already exists
                User temp = mapper.readValue(new File(newUsername + ".json"), User.class);

                System.out.println("User Already Exists! Enter a unique username.");
            } catch (Exception exception) {
                // Create a new user with default values
                Outfit defaultOutfit = new Outfit();
                User newUser = new User(newUsername, 1, 0, defaultOutfit);
                
                // Save the new user
                newUser.saveUser();
                btnBack.setDisable(false);

                usernameText.setText("");

                // Show labelFeedback for a second
                labelFeedback1.setText("New Profile Created and Switched to!");
                labelFeedback1.setVisible(true);
                Timeline timeline = new Timeline(new KeyFrame(Duration.seconds(1), e -> labelFeedback1.setVisible(false)));
                timeline.play();

                // Handle the back button click event here
                try {

                    //Set icon on the taskbar/dock
                    if (Taskbar.isTaskbarSupported()) {
                        Taskbar taskbar = Taskbar.getTaskbar();

                        if (taskbar.isSupported(Feature.ICON_IMAGE)) {
                            final Toolkit defaultToolkit = Toolkit.getDefaultToolkit();
                            var dockIcon = defaultToolkit.getImage("src/main/java/com/group25/GUI/assets/icon.png");
                            taskbar.setIconImage(dockIcon);
                        }

                    }
                    // Load the MainScene.fxml file
                    FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/group25/GUI/fxml/FirstEditCharacterScene.fxml"));
                    Parent root = loader.load();

                    // Set scene of cur stage to main
                    // currentStage.setTitle("Hello World!");
                    Stage stage = new Stage();
                    stage.setScene(new Scene(root));
                    stage.setResizable(false);

                    Image appIcon = new Image("file:src/main/java/com/group25/GUI/assets/icon.png");

                    stage.getIcons().add(appIcon);

                    stage.show();
                    
                    // Close the current stage (Instruction scene)
                    Stage currentStage = (Stage) btnBack.getScene().getWindow();
                    currentStage.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        } else {
            labelFeedback1.setText("Please Enter A Valid Username!");
            labelFeedback1.setVisible(true);
            Timeline timeline = new Timeline(new KeyFrame(Duration.seconds(3), e -> labelFeedback1.setVisible(false)));
            timeline.play();
        }
    }

    /**
     * Event handler for the 'Back' button click.
     * @param event The ActionEvent generated by the button click.
     */
    @FXML
    private void backBtnClicked(ActionEvent event) {
        Alert alert = new Alert(AlertType.WARNING, "Do you want to close the game?", ButtonType.YES, ButtonType.CANCEL);
        alert.setHeaderText("");
        alert.showAndWait();

        if (alert.getResult() == ButtonType.YES) {
            // Platform.exit();
            System.exit(0);
        }
    }
}
